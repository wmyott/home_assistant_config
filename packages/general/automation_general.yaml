automation:
  # IF: { input_select hass_template is changed by user OR home assistants boots up } THEN: { set theme to state given by input_select.hass_template }
  - alias: switch_hass_template
    id: switch_hass_template
    trigger:
      - platform: state
        entity_id: input_select.hass_template
      - platform: homeassistant
        event: start
    action:
      - service: frontend.set_theme
        data_template:
          name: none
          mode: light

    # IF: { sun.sun goes under horizon } THEN: { set to dark mode }
  - alias: day_to_night_theme
    id: day_to_night_theme
    trigger:
      - platform: state
        entity_id: sun.sun
        from: 'above_horizon'
        to: 'below_horizon'
    action:
      - service: frontend.set_theme
        data:
          name: none
          mode: dark

    # IF: { sun.sun is up } THEN: { set theme to day mode }
  - alias: night_to_day_theme
    id: night_to_day_theme
    trigger:
      - platform: state
        entity_id: sun.sun
        from: 'below_horizon'
        to: 'above_horizon'
    action:
      - service: frontend.set_theme
        data:
          name: none
          mode: light

  - id: schedule_night_lights_on
    alias: Turn on Nightlights
    description: ''
    trigger:
    - platform: time
      at: '23:00:00'
    condition: []
    action:
    - type: turn_on
      device_id: f7d7595ce1ae44dc5b12989e2372513c
      entity_id: switch.living_room_night_light
      domain: switch
    mode: single
  - id: schedule_night_lights_off
    alias: Turn Off Nightlights
    description: ''
    trigger:
    - platform: time
      at: 06:30:00
    condition: []
    action:
    - type: turn_off
      device_id: f7d7595ce1ae44dc5b12989e2372513c
      entity_id: switch.living_room_night_light
      domain: switch
    mode: single
